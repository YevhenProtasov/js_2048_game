{"mappings":"C,A,W,I,E,C,ECSM,EAAA,ACDN,CAAA,EAAiB,CACf,mBATF,SAA4B,CAAI,EAC9B,OAAO,CAAI,CAAC,EAAE,CAAC,WAAW,GAAK,EAAK,KAAK,CAAC,EAC5C,EAQE,oBANF,SAA6B,CAAG,EAC9B,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAI,MAAM,CAC9C,CAKA,CAAA,EDFM,kBAAA,COTC,SAAS,EAAqB,CAAG,CAAE,CAAG,EACrC,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CFDO,SAAS,EAAqB,CAAG,EACpC,OAAO,ACJJ,SAA8B,CAAG,EACpC,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AGNjC,SAA4B,CAAI,EACnC,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AKJ5D,SAAwC,CAAC,CAAE,CAAM,EACpD,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFT,KAAA,GAI9C,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EAR3D,KAAA,GASlD,ELLkG,IAAQ,AINnG,WACH,MAAM,AAAI,UAAU,uIACxB,GJKA,CHLM,IAAA,EAAA,EAAA,mBAAA,CFWA,EAAO,GEJb,CAAA,eEE2C,EFFrC,SAAA,IAgBF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,EArBC,ACTC,SAA2B,CAAQ,CAAE,CAAW,EACnD,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDOM,IAAA,CAAA,GAwBF,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAC,CAApC,EAA6C,OAAA,AAAA,EAAG,E,GAChD,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,M,CA3BZ,OEEqC,EFFrC,C,CA8BJ,IAAA,WAAA,MAAA,WACO,IAAI,CAAC,WAAW,IAIjB,AAAgB,YAAhB,IAAI,CAAC,MAAM,GACb,IAAI,CAAC,IAAI,GAET,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,cAAc,GAEvB,C,E,CAEA,IAAA,YAAA,MAAA,WACO,IAAI,CAAC,YAAY,IAIlB,AAAgB,YAAhB,IAAI,CAAC,MAAM,GACb,IAAI,CAAC,YAAY,GACjB,IAAI,CAAC,IAAI,GACT,IAAI,CAAC,YAAY,GAEjB,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,cAAc,GAEvB,C,E,CAEA,IAAA,SAAA,MAAA,WACO,IAAI,CAAC,SAAS,IAIf,AAAgB,YAAhB,IAAI,CAAC,MAAM,GACb,IAAI,CAAC,cAAc,GACnB,IAAI,CAAC,IAAI,GACT,IAAI,CAAC,cAAc,GAEnB,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,cAAc,GAEvB,C,E,CAEA,IAAA,WAAA,MAAA,WACO,IAAI,CAAC,WAAW,IAIjB,AAAgB,YAAhB,IAAI,CAAC,MAAM,GACb,IAAI,CAAC,cAAc,GACnB,IAAI,CAAC,YAAY,GACjB,IAAI,CAAC,IAAI,GACT,IAAI,CAAC,YAAY,GACjB,IAAI,CAAC,cAAc,GAEnB,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,cAAc,GAEvB,C,E,CAKA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAKA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAYA,IAAA,YAAA,MAAA,WACE,OAAO,IAAI,CAAC,MAAM,AACpB,C,E,CAKA,IAAA,QAAA,MAAA,WACE,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,MAAM,CAAG,SAChB,C,E,CAKA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAC,CAApC,EAA6C,OAAA,AAAA,EAAG,E,GAEhD,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,MAChB,C,E,CAGA,IAAA,gBAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAC,CAAA,CAAY,CAAA,CAAK,CAA3C,EAOE,OANA,EAAI,OAAO,CAAC,SAAC,CAAA,CAAM,CAAnB,EACe,IAAT,GACF,EAAW,IAAI,CAAC,CAAE,SAAA,EAAU,SAAA,CAAS,EAEzC,GAEO,CACT,EAAG,EAAE,CACP,C,E,CAEA,IAAA,UAAA,MAAA,WAGE,IAAM,EAAa,IAAI,CAAC,aAAa,GAErC,GAAI,EAAW,MAAM,CAAG,EAAG,CACzB,IAAM,EAAiB,EAAoB,GAEZ,EAAA,CAAU,CAAC,EAAe,CAAjD,EAAuB,EAAvB,QAAA,CAAU,EAAa,EAAb,QAAlB,AAEA,CAAA,IAAI,CAAC,KAAK,CAAC,EAAS,CAAC,EAAS,CATjB,AAAiB,IAAjB,KAAK,MAAM,GAAY,EAAI,CAU1C,CACF,C,E,CAEA,IAAA,OAAA,MAAA,W,I,E,I,AACE,CAAA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAA7B,EAAqC,OAAA,EAAI,MAAM,CAAC,SAAC,CAAZ,EAAkB,OAAA,AAAM,IAAN,C,E,GAEvD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAC,CAApB,EACE,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,MAAM,CAAG,EAAG,IACrC,GAAI,CAAM,CAAC,EAAE,GAAK,CAAM,CAAC,EAAI,EAAE,CAAE,CAC/B,EAAK,KAAK,EAAI,AAAY,EAAZ,CAAM,CAAC,EAAE,CACvB,CAAM,CAAC,EAAE,EAAI,CAAM,CAAC,EAAI,EAAE,CAC1B,CAAM,CAAC,EAAI,EAAE,CAAG,EAChB,IACA,QACF,CAEJ,GAEA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAA7B,EAAqC,OAAA,EAAI,MAAM,CAAC,SAAC,CAAZ,EAAkB,OAAA,AAAM,IAAN,C,E,GAEvD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAC,CAApB,EACE,KAAO,EAAI,MAAM,CAAG,GAClB,EAAI,IAAI,CAAC,EAEb,EACF,C,E,CAEA,IAAA,iBAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAC,CAAxB,EAAgC,OAAA,EAAI,QAAQ,CAAC,K,EAC/C,C,E,CAEA,IAAA,eAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAA7B,EAAqC,OAAA,EAAI,OAAO,E,EAClD,C,E,CAEA,IAAA,iBAAA,MAAA,W,I,E,I,AACE,CAAA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,SAAC,CAAA,CAAG,CAAnC,EACE,OAAO,EAAK,KAAK,CAAC,GAAG,CAAC,SAAC,CAAvB,EAA+B,OAAA,CAAG,CAAC,EAAK,A,EAC1C,EACF,C,E,CAEA,IAAA,cAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAC,CAAxB,EACE,IAAM,EAAgB,EAAI,MAAM,CAAC,SAAC,CAAlC,EAA2C,OAAA,AAAS,IAAT,C,GAE3C,GAAI,AAAyB,IAAzB,EAAc,MAAM,CACtB,MAAO,CAAA,EAGT,IAAK,IAAI,EAAI,EAAG,EAAI,EAAc,MAAM,CAAE,IACxC,GAAI,CAAa,CAAC,EAAE,GAAK,CAAa,CAAC,EAAI,EAAE,EAK3C,EAAI,OAAO,CAAC,CAAa,CAAC,EAAE,IAC5B,EAAc,OAAO,CAAC,CAAa,CAAC,EAAE,EALtC,MAAO,CAAA,CAUb,EACF,C,E,CAEA,IAAA,eAAA,MAAA,WACE,IAAI,CAAC,YAAY,GAEjB,IAAM,EAAa,IAAI,CAAC,WAAW,GAInC,OAFA,IAAI,CAAC,YAAY,GAEV,CACT,C,E,CAEA,IAAA,YAAA,MAAA,WACE,IAAI,CAAC,cAAc,GAEnB,IAAM,EAAa,IAAI,CAAC,WAAW,GAInC,OAFA,IAAI,CAAC,cAAc,GAEZ,CACT,C,E,CAEA,IAAA,cAAA,MAAA,WACE,IAAI,CAAC,cAAc,GACnB,IAAI,CAAC,YAAY,GAEjB,IAAM,EAAa,IAAI,CAAC,WAAW,GAKnC,OAHA,IAAI,CAAC,YAAY,GACjB,IAAI,CAAC,cAAc,GAEZ,CACT,C,E,CAEA,IAAA,UAAA,MAAA,WACE,OACE,IAAI,CAAC,WAAW,IAChB,IAAI,CAAC,YAAY,IACjB,IAAI,CAAC,SAAS,IACd,IAAI,CAAC,WAAW,EAEpB,C,E,CAEA,IAAA,iBAAA,MAAA,kBACE,AAAI,IAAI,CAAC,cAAc,IACrB,IAAI,CAAC,MAAM,CAAG,MAEP,CAAA,KAGJ,IAAI,CAAC,OAAO,KACf,IAAI,CAAC,MAAM,CAAG,OAEP,CAAA,EAIX,C,E,CErRkB,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,AFHhC,EEG4C,SAAS,CAAE,GFHvD,C,G,EFQA,EAAS,SAAS,aAAa,CAAC,WAChC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,eAC/B,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAc,SAAS,aAAa,CAAC,iBAE3C,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAiB,EAAO,SAAS,CAAC,KAAK,CAAC,IAEpB,CAAA,UAAtB,CAAc,CAAC,EAAE,GACnB,EAAK,KAAK,GAEV,KAGwB,YAAtB,CAAc,CAAC,EAAE,GACnB,EAAK,OAAO,GAEZ,KAGF,IAEA,EAAO,SAAS,CAAC,MAAM,CAAC,SACxB,EAAO,SAAS,CAAC,MAAM,CAAC,WAExB,IAAM,EAAoB,EAAO,SAAS,CAAC,KAAK,CAAC,IAEjD,CAAA,EAAO,WAAW,CAAG,EAAmB,CAAiB,CAAC,EAAE,CAC9D,GAEA,IAAM,EAAW,CAAC,aAAc,YAAa,UAAW,YAAY,CA+BpE,SAAS,IAGP,AAFkB,EAAK,QAAQ,GAErB,OAAO,CAAC,SAAC,CAAA,CAAM,CAAzB,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAG,SAAS,CAAC,GAAG,CAAC,aAEjB,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAG,SAAS,CAAC,GAAG,CAAC,cAEb,GACF,EAAG,SAAS,CAAC,GAAG,CAAE,eAAmB,MAAA,CAAL,IAGlC,EAAG,WAAW,CAAG,GAAQ,GAEzB,EAAG,WAAW,CAAC,EACjB,GAEA,EAAM,YAAY,CAAC,EAAI,EAAM,IAAI,CAAC,EAAM,CAC1C,GAEA,EAAM,WAAW,CAAG,EAAK,QAAQ,EACnC,CAEA,SAAS,IAGP,OAFmB,EAAK,SAAS,IAG/B,IAAK,OACH,EAAa,SAAS,CAAC,MAAM,CAAC,UAE9B,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,EAAY,SAAS,CAAC,GAAG,CAAC,UAE1B,KAEF,KAAK,UACH,EAAa,SAAS,CAAC,GAAG,CAAC,UAC3B,KAEF,KAAK,MACH,EAAW,SAAS,CAAC,MAAM,CAAC,UAC5B,KAEF,KAAK,OACH,EAAY,SAAS,CAAC,MAAM,CAAC,SAKjC,CACF,CApFA,SAAS,gBAAgB,CAAC,UAAW,SAAC,CAAtC,EAGqB,YAFA,EAAK,SAAS,KAMnB,eAAV,EAAE,GAAG,EACP,EAAK,SAAS,GAGF,cAAV,EAAE,GAAG,EACP,EAAK,QAAQ,GAGD,YAAV,EAAE,GAAG,EACP,EAAK,MAAM,GAGC,cAAV,EAAE,GAAG,EACP,EAAK,QAAQ,GAGX,EAAS,QAAQ,CAAC,EAAE,GAAG,IACzB,IACA,KAEJ,E","sources":["<anon>","src/scripts/main.js","src/scripts/utils.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $be4033f5133c0ac7$exports = {};\nfunction $be4033f5133c0ac7$var$getCapitalizedWord(word) {\n    return word[0].toUpperCase() + word.slice(1);\n}\nfunction $be4033f5133c0ac7$var$getRandomArrayIndex(arr) {\n    return Math.floor(Math.random() * arr.length);\n}\n$be4033f5133c0ac7$exports = {\n    getCapitalizedWord: $be4033f5133c0ac7$var$getCapitalizedWord,\n    getRandomArrayIndex: $be4033f5133c0ac7$var$getRandomArrayIndex\n};\n\n\nvar $197cd56b15c33885$require$getCapitalizedWord = $be4033f5133c0ac7$exports.getCapitalizedWord;\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\n\nvar $3d28d7f1aac198f5$require$getRandomArrayIndex = $be4033f5133c0ac7$exports.getRandomArrayIndex;\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        // eslint-disable-next-line no-console\n        this.initialState = initialState;\n        this.state = this.initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (!this.canMoveLeft()) return;\n                if (this.status === \"playing\") {\n                    this.move();\n                    this.addTile();\n                    this.isGameContinue();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (!this.canMoveRight()) return;\n                if (this.status === \"playing\") {\n                    this.reverseBoard();\n                    this.move();\n                    this.reverseBoard();\n                    this.addTile();\n                    this.isGameContinue();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (!this.canMoveUp()) return;\n                if (this.status === \"playing\") {\n                    this.transposeBoard();\n                    this.move();\n                    this.transposeBoard();\n                    this.addTile();\n                    this.isGameContinue();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (!this.canMoveDown()) return;\n                if (this.status === \"playing\") {\n                    this.transposeBoard();\n                    this.reverseBoard();\n                    this.move();\n                    this.reverseBoard();\n                    this.transposeBoard();\n                    this.addTile();\n                    this.isGameContinue();\n                }\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.addTile();\n                this.addTile();\n                this.status = \"playing\";\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"getEmptyCells\",\n            value: function getEmptyCells() {\n                return this.state.reduce(function(emptyCells, row, rowIndex) {\n                    row.forEach(function(item, colIndex) {\n                        if (item === 0) emptyCells.push({\n                            rowIndex: rowIndex,\n                            colIndex: colIndex\n                        });\n                    });\n                    return emptyCells;\n                }, []);\n            }\n        },\n        {\n            key: \"addTile\",\n            value: function addTile() {\n                var number = Math.random() <= 0.1 ? 4 : 2;\n                var emptyCells = this.getEmptyCells();\n                if (emptyCells.length > 0) {\n                    var emptyCellIndex = $3d28d7f1aac198f5$require$getRandomArrayIndex(emptyCells);\n                    var _emptyCells_emptyCellIndex = emptyCells[emptyCellIndex], rowIndex = _emptyCells_emptyCellIndex.rowIndex, colIndex = _emptyCells_emptyCellIndex.colIndex;\n                    this.state[rowIndex][colIndex] = number;\n                }\n            }\n        },\n        {\n            key: \"move\",\n            value: function move() {\n                var _this = this;\n                this.state = this.state.map(function(row) {\n                    return row.filter(function(v) {\n                        return v !== 0;\n                    });\n                });\n                this.state.forEach(function(newRow) {\n                    for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                        _this.score += newRow[i] * 2;\n                        newRow[i] += newRow[i + 1];\n                        newRow[i + 1] = 0;\n                        i++;\n                        continue;\n                    }\n                });\n                this.state = this.state.map(function(row) {\n                    return row.filter(function(v) {\n                        return v !== 0;\n                    });\n                });\n                this.state.forEach(function(row) {\n                    while(row.length < 4)row.push(0);\n                });\n            }\n        },\n        {\n            key: \"isBoardHas2048\",\n            value: function isBoardHas2048() {\n                return this.state.some(function(row) {\n                    return row.includes(2048);\n                });\n            }\n        },\n        {\n            key: \"reverseBoard\",\n            value: function reverseBoard() {\n                this.state = this.state.map(function(row) {\n                    return row.reverse();\n                });\n            }\n        },\n        {\n            key: \"transposeBoard\",\n            value: function transposeBoard() {\n                var _this = this;\n                this.state = this.state[0].map(function(_, colI) {\n                    return _this.state.map(function(row) {\n                        return row[colI];\n                    });\n                });\n            }\n        },\n        {\n            key: \"canMoveLeft\",\n            value: function canMoveLeft() {\n                return this.state.some(function(row) {\n                    var rowWithValues = row.filter(function(item) {\n                        return item !== 0;\n                    });\n                    if (rowWithValues.length === 0) return false;\n                    for(var i = 0; i < rowWithValues.length; i++){\n                        if (rowWithValues[i] === rowWithValues[i + 1]) return true;\n                        if (row.indexOf(rowWithValues[i]) !== rowWithValues.indexOf(rowWithValues[i])) return true;\n                    }\n                });\n            }\n        },\n        {\n            key: \"canMoveRight\",\n            value: function canMoveRight() {\n                this.reverseBoard();\n                var permission = this.canMoveLeft();\n                this.reverseBoard();\n                return permission;\n            }\n        },\n        {\n            key: \"canMoveUp\",\n            value: function canMoveUp() {\n                this.transposeBoard();\n                var permission = this.canMoveLeft();\n                this.transposeBoard();\n                return permission;\n            }\n        },\n        {\n            key: \"canMoveDown\",\n            value: function canMoveDown() {\n                this.transposeBoard();\n                this.reverseBoard();\n                var permission = this.canMoveLeft();\n                this.reverseBoard();\n                this.transposeBoard();\n                return permission;\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                return this.canMoveLeft() || this.canMoveRight() || this.canMoveUp() || this.canMoveDown();\n            }\n        },\n        {\n            key: \"isGameContinue\",\n            value: function isGameContinue() {\n                if (this.isBoardHas2048()) {\n                    this.status = \"win\";\n                    return false;\n                }\n                if (!this.canMove()) {\n                    this.status = \"lose\";\n                    return false;\n                }\n                return true;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// Write your code here\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$tbody = document.querySelector(\"tbody\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    var onClickClasses = $197cd56b15c33885$var$button.className.split(\" \");\n    if (onClickClasses[1] === \"start\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$manageMessage();\n    }\n    if (onClickClasses[1] === \"restart\") {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$manageMessage();\n    }\n    $197cd56b15c33885$var$changeField();\n    $197cd56b15c33885$var$button.classList.toggle(\"start\");\n    $197cd56b15c33885$var$button.classList.toggle(\"restart\");\n    var afterClickClasses = $197cd56b15c33885$var$button.className.split(\" \");\n    $197cd56b15c33885$var$button.textContent = $197cd56b15c33885$require$getCapitalizedWord(afterClickClasses[1]);\n});\nvar $197cd56b15c33885$var$moveKeys = [\n    \"ArrowRight\",\n    \"ArrowLeft\",\n    \"ArrowUp\",\n    \"ArrowDown\"\n];\ndocument.addEventListener(\"keydown\", function(e) {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus !== \"playing\") return;\n    if (e.key === \"ArrowRight\") $197cd56b15c33885$var$game.moveRight();\n    if (e.key === \"ArrowLeft\") $197cd56b15c33885$var$game.moveLeft();\n    if (e.key === \"ArrowUp\") $197cd56b15c33885$var$game.moveUp();\n    if (e.key === \"ArrowDown\") $197cd56b15c33885$var$game.moveDown();\n    if ($197cd56b15c33885$var$moveKeys.includes(e.key)) {\n        $197cd56b15c33885$var$changeField();\n        $197cd56b15c33885$var$manageMessage();\n    }\n});\nfunction $197cd56b15c33885$var$changeField() {\n    var currState = $197cd56b15c33885$var$game.getState();\n    currState.forEach(function(line, index) {\n        var tr = document.createElement(\"tr\");\n        tr.classList.add(\"field-row\");\n        line.forEach(function(item) {\n            var td = document.createElement(\"td\");\n            td.classList.add(\"field-cell\");\n            if (item) td.classList.add(\"field-cell--\".concat(item));\n            td.textContent = item || \"\";\n            tr.appendChild(td);\n        });\n        $197cd56b15c33885$var$tbody.replaceChild(tr, $197cd56b15c33885$var$tbody.rows[index]);\n    });\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n}\nfunction $197cd56b15c33885$var$manageMessage() {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    switch(gameStatus){\n        case \"idle\":\n            $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n            $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n            break;\n        case \"playing\":\n            $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n            break;\n        case \"win\":\n            $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n            break;\n        case \"lose\":\n            $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n            break;\n        default:\n            break;\n    }\n}\n\n})();\n//# sourceMappingURL=index.954039fc.js.map\n","'use strict';\n\n// const initialState = [\n//   [0, 0, 0, 0],\n//   [0, 0, 0, 0],\n//   [0, 0, 0, 0],\n//   [0, 0, 0, 0],\n// ];\n\nconst { getCapitalizedWord } = require('./utils');\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// Write your code here\n\nconst button = document.querySelector('.button');\nconst tbody = document.querySelector('tbody');\nconst score = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\nbutton.addEventListener('click', () => {\n  const onClickClasses = button.className.split(' ');\n\n  if (onClickClasses[1] === 'start') {\n    game.start();\n\n    manageMessage();\n  }\n\n  if (onClickClasses[1] === 'restart') {\n    game.restart();\n\n    manageMessage();\n  }\n\n  changeField();\n\n  button.classList.toggle('start');\n  button.classList.toggle('restart');\n\n  const afterClickClasses = button.className.split(' ');\n\n  button.textContent = getCapitalizedWord(afterClickClasses[1]);\n});\n\nconst moveKeys = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'];\n\ndocument.addEventListener('keydown', (e) => {\n  const gameStatus = game.getStatus();\n\n  if (gameStatus !== 'playing') {\n    return;\n  }\n\n  if (e.key === 'ArrowRight') {\n    game.moveRight();\n  }\n\n  if (e.key === 'ArrowLeft') {\n    game.moveLeft();\n  }\n\n  if (e.key === 'ArrowUp') {\n    game.moveUp();\n  }\n\n  if (e.key === 'ArrowDown') {\n    game.moveDown();\n  }\n\n  if (moveKeys.includes(e.key)) {\n    changeField();\n    manageMessage();\n  }\n});\n\nfunction changeField() {\n  const currState = game.getState();\n\n  currState.forEach((line, index) => {\n    const tr = document.createElement('tr');\n\n    tr.classList.add('field-row');\n\n    line.forEach((item) => {\n      const td = document.createElement('td');\n\n      td.classList.add('field-cell');\n\n      if (item) {\n        td.classList.add(`field-cell--${item}`);\n      }\n\n      td.textContent = item || '';\n\n      tr.appendChild(td);\n    });\n\n    tbody.replaceChild(tr, tbody.rows[index]);\n  });\n\n  score.textContent = game.getScore();\n}\n\nfunction manageMessage() {\n  const gameStatus = game.getStatus();\n\n  switch (gameStatus) {\n    case 'idle':\n      startMessage.classList.remove('hidden');\n\n      winMessage.classList.add('hidden');\n      loseMessage.classList.add('hidden');\n\n      break;\n\n    case 'playing':\n      startMessage.classList.add('hidden');\n      break;\n\n    case 'win':\n      winMessage.classList.remove('hidden');\n      break;\n\n    case 'lose':\n      loseMessage.classList.remove('hidden');\n      break;\n\n    default:\n      break;\n  }\n}\n","function getCapitalizedWord(word) {\n  return word[0].toUpperCase() + word.slice(1);\n}\n\nfunction getRandomArrayIndex(arr) {\n  return Math.floor(Math.random() * arr.length);\n}\n\nmodule.exports = {\n  getCapitalizedWord,\n  getRandomArrayIndex,\n};\n","'use strict';\n\nconst { getRandomArrayIndex } = require('../scripts/utils');\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    // eslint-disable-next-line no-console\n    this.initialState = initialState;\n    this.state = this.initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    if (!this.canMoveLeft()) {\n      return;\n    }\n\n    if (this.status === 'playing') {\n      this.move();\n\n      this.addTile();\n      this.isGameContinue();\n    }\n  }\n\n  moveRight() {\n    if (!this.canMoveRight()) {\n      return;\n    }\n\n    if (this.status === 'playing') {\n      this.reverseBoard();\n      this.move();\n      this.reverseBoard();\n\n      this.addTile();\n      this.isGameContinue();\n    }\n  }\n\n  moveUp() {\n    if (!this.canMoveUp()) {\n      return;\n    }\n\n    if (this.status === 'playing') {\n      this.transposeBoard();\n      this.move();\n      this.transposeBoard();\n\n      this.addTile();\n      this.isGameContinue();\n    }\n  }\n\n  moveDown() {\n    if (!this.canMoveDown()) {\n      return;\n    }\n\n    if (this.status === 'playing') {\n      this.transposeBoard();\n      this.reverseBoard();\n      this.move();\n      this.reverseBoard();\n      this.transposeBoard();\n\n      this.addTile();\n      this.isGameContinue();\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.addTile();\n    this.addTile();\n    this.status = 'playing';\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.state = this.initialState.map((row) => [...row]);\n\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  // Add your own methods here\n  getEmptyCells() {\n    return this.state.reduce((emptyCells, row, rowIndex) => {\n      row.forEach((item, colIndex) => {\n        if (item === 0) {\n          emptyCells.push({ rowIndex, colIndex });\n        }\n      });\n\n      return emptyCells;\n    }, []);\n  }\n\n  addTile() {\n    const number = Math.random() <= 0.1 ? 4 : 2;\n\n    const emptyCells = this.getEmptyCells();\n\n    if (emptyCells.length > 0) {\n      const emptyCellIndex = getRandomArrayIndex(emptyCells);\n\n      const { rowIndex, colIndex } = emptyCells[emptyCellIndex];\n\n      this.state[rowIndex][colIndex] = number;\n    }\n  }\n\n  move() {\n    this.state = this.state.map((row) => row.filter((v) => v !== 0));\n\n    this.state.forEach((newRow) => {\n      for (let i = 0; i < newRow.length - 1; i++) {\n        if (newRow[i] === newRow[i + 1]) {\n          this.score += newRow[i] * 2;\n          newRow[i] += newRow[i + 1];\n          newRow[i + 1] = 0;\n          i++;\n          continue;\n        }\n      }\n    });\n\n    this.state = this.state.map((row) => row.filter((v) => v !== 0));\n\n    this.state.forEach((row) => {\n      while (row.length < 4) {\n        row.push(0);\n      }\n    });\n  }\n\n  isBoardHas2048() {\n    return this.state.some((row) => row.includes(2048));\n  }\n\n  reverseBoard() {\n    this.state = this.state.map((row) => row.reverse());\n  }\n\n  transposeBoard() {\n    this.state = this.state[0].map((_, colI) => {\n      return this.state.map((row) => row[colI]);\n    });\n  }\n\n  canMoveLeft() {\n    return this.state.some((row) => {\n      const rowWithValues = row.filter((item) => item !== 0);\n\n      if (rowWithValues.length === 0) {\n        return false;\n      }\n\n      for (let i = 0; i < rowWithValues.length; i++) {\n        if (rowWithValues[i] === rowWithValues[i + 1]) {\n          return true;\n        }\n\n        if (\n          row.indexOf(rowWithValues[i]) !==\n          rowWithValues.indexOf(rowWithValues[i])\n        ) {\n          return true;\n        }\n      }\n    });\n  }\n\n  canMoveRight() {\n    this.reverseBoard();\n\n    const permission = this.canMoveLeft();\n\n    this.reverseBoard();\n\n    return permission;\n  }\n\n  canMoveUp() {\n    this.transposeBoard();\n\n    const permission = this.canMoveLeft();\n\n    this.transposeBoard();\n\n    return permission;\n  }\n\n  canMoveDown() {\n    this.transposeBoard();\n    this.reverseBoard();\n\n    const permission = this.canMoveLeft();\n\n    this.reverseBoard();\n    this.transposeBoard();\n\n    return permission;\n  }\n\n  canMove() {\n    return (\n      this.canMoveLeft() ||\n      this.canMoveRight() ||\n      this.canMoveUp() ||\n      this.canMoveDown()\n    );\n  }\n\n  isGameContinue() {\n    if (this.isBoardHas2048()) {\n      this.status = 'win';\n\n      return false;\n    }\n\n    if (!this.canMove()) {\n      this.status = 'lose';\n\n      return false;\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$be4033f5133c0ac7$exports","$197cd56b15c33885$require$getCapitalizedWord","getCapitalizedWord","word","toUpperCase","slice","getRandomArrayIndex","arr","Math","floor","random","length","$c3b10a83b523f372$export$79e617b1955a2616","len","i","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","constructor","name","test","TypeError","$3d28d7f1aac198f5$require$getRandomArrayIndex","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","state","map","row","score","status","key","value","canMoveLeft","move","addTile","isGameContinue","canMoveRight","reverseBoard","canMoveUp","transposeBoard","canMoveDown","reduce","emptyCells","rowIndex","forEach","item","colIndex","push","getEmptyCells","emptyCellIndex","_emptyCells_emptyCellIndex","_this","filter","v","newRow","some","includes","reverse","_","colI","rowWithValues","indexOf","permission","isBoardHas2048","canMove","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$button","document","querySelector","$197cd56b15c33885$var$tbody","$197cd56b15c33885$var$score","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$loseMessage","addEventListener","onClickClasses","className","split","start","$197cd56b15c33885$var$manageMessage","restart","$197cd56b15c33885$var$changeField","classList","toggle","afterClickClasses","textContent","$197cd56b15c33885$var$moveKeys","currState","getState","line","index","tr","createElement","add","td","concat","appendChild","replaceChild","rows","getScore","getStatus","remove","e","moveRight","moveLeft","moveUp","moveDown"],"version":3,"file":"index.954039fc.js.map"}